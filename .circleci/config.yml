# To update the build configuration, edit the "builds" array below and run:
# erb .circleci/config.yml.erb > .circleci/config.yml


version: 2

shared_build_steps: &shared_build_steps
  - checkout

  - attach_workspace:
      at: /tmp/workspace

  - run:
      name: Store Rails Version
      command: |
        echo "$RUBY_VERSION/$RAILS_VERSION" > RAILS_VERSION

  # Download and cache dependencies
  - restore_cache:
      keys:
      - dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "RAILS_VERSION" }}-{{ checksum "Gemfile" }}-{{ checksum "meta-tags.gemspec" }}
      # fallback to using the latest cache if no exact match is found
      - dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "RAILS_VERSION" }}

  - run:
      name: Install Dependencies
      command: |
        bundle check || (bundle install --jobs=4 --retry=3 --path vendor/bundle && bundle clean)

  - save_cache:
      paths:
        - ./vendor/bundle
        - /usr/local/bundle/config
      key: dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "RAILS_VERSION" }}-{{ checksum "Gemfile" }}-{{ checksum "meta-tags.gemspec" }}

  # run tests!
  - run:
      name: Run Tests
      command: |
        mkdir /tmp/test-results
        TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

        bundle exec rspec --format progress \
                          --format RspecJunitFormatter \
                          --out /tmp/test-results/rspec.xml \
                          --format progress \
                          $TEST_FILES

  # collect reports
  - store_test_results:
      path: /tmp/test-results
  - store_artifacts:
      path: /tmp/test-results
      destination: test-results

  - persist_to_workspace:
      root: ~/meta-tags
      paths:
        - "*/coverage/.resultset.json"

jobs:
  
  build-ruby24-rails4210:
    docker:
      - image: circleci/ruby:2.4
        environment:
          RAILS_VERSION: 4.2.10
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby24-rails4210
    steps: *shared_build_steps
  
  build-ruby24-rails507:
    docker:
      - image: circleci/ruby:2.4
        environment:
          RAILS_VERSION: 5.0.7
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby24-rails507
    steps: *shared_build_steps
  
  build-ruby24-rails516:
    docker:
      - image: circleci/ruby:2.4
        environment:
          RAILS_VERSION: 5.1.6
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby24-rails516
    steps: *shared_build_steps
  
  build-ruby24-rails520:
    docker:
      - image: circleci/ruby:2.4
        environment:
          RAILS_VERSION: 5.2.0
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby24-rails520
    steps: *shared_build_steps
  
  build-ruby25-rails4210:
    docker:
      - image: circleci/ruby:2.5
        environment:
          RAILS_VERSION: 4.2.10
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby25-rails4210
    steps: *shared_build_steps
  
  build-ruby25-rails507:
    docker:
      - image: circleci/ruby:2.5
        environment:
          RAILS_VERSION: 5.0.7
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby25-rails507
    steps: *shared_build_steps
  
  build-ruby25-rails516:
    docker:
      - image: circleci/ruby:2.5
        environment:
          RAILS_VERSION: 5.1.6
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby25-rails516
    steps: *shared_build_steps
  
  build-ruby25-rails520:
    docker:
      - image: circleci/ruby:2.5
        environment:
          RAILS_VERSION: 5.2.0
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby25-rails520
    steps: *shared_build_steps
  
  build-ruby26-rc-rails4210:
    docker:
      - image: circleci/ruby:2.6-rc
        environment:
          RAILS_VERSION: 4.2.10
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby26-rc-rails4210
    steps: *shared_build_steps
  
  build-ruby26-rc-rails507:
    docker:
      - image: circleci/ruby:2.6-rc
        environment:
          RAILS_VERSION: 5.0.7
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby26-rc-rails507
    steps: *shared_build_steps
  
  build-ruby26-rc-rails516:
    docker:
      - image: circleci/ruby:2.6-rc
        environment:
          RAILS_VERSION: 5.1.6
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby26-rc-rails516
    steps: *shared_build_steps
  
  build-ruby26-rc-rails520:
    docker:
      - image: circleci/ruby:2.6-rc
        environment:
          RAILS_VERSION: 5.2.0
          ENABLE_CODE_COVERAGE: 1
    working_directory: ~/meta-tags/ruby26-rc-rails520
    steps: *shared_build_steps
  

  upload-coverage:
    docker:
      - image: circleci/ruby:2.5
        environment:
          CC_TEST_REPORTER_ID: 8792cbc0d1780830ddd3dd7eb1c25f09f386ba8f04449ad830039469406a6ab3
    steps:
      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Upload Code Coverage
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter after-build --coverage-input-type simplecov --input /tmp/workspace/ruby25-rails520/coverage/.resultset.json || true

workflows:
  version: 2
  test:
    jobs:
      
      - build-ruby24-rails4210
      
      - build-ruby24-rails507
      
      - build-ruby24-rails516
      
      - build-ruby24-rails520
      
      - build-ruby25-rails4210
      
      - build-ruby25-rails507
      
      - build-ruby25-rails516
      
      - build-ruby25-rails520
      
      - build-ruby26-rc-rails4210
      
      - build-ruby26-rc-rails507
      
      - build-ruby26-rc-rails516
      
      - build-ruby26-rc-rails520
      

      - upload-coverage:
          requires:
            - build-ruby25-rails520
